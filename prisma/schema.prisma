generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Raffle {
  id               BigInt    @id @default(autoincrement())
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  name             String?
  token_id         Int?
  nft_address      String?   @db.VarChar
  start_date       DateTime? @db.Timestamptz(6)
  end_date         DateTime? @db.Timestamptz(6)
  raffle_cost      Float?    @db.Real
  max_tickets      Int?
  sold_tickets     Int?
  created_by       String?   @db.VarChar
  participant_list Json[]    @db.Json
  transaction_list Json[]    @db.Json
  favourite_count  Int?
  nft_image        String?   @db.VarChar
  raffler          String?   @unique @db.VarChar
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// TODO: Should be renamed to "User" not users
model users {
  id             BigInt    @id @default(autoincrement())
  address        String    @unique
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  last_logged_in DateTime? @default(now()) @db.Timestamptz(6)
  username       String?
  badges         Json[]    @db.Json
  level          BigInt?   @default(0)
  quests         Json[]    @db.Json
  friends        Json[]    @db.Json
  inventory      Json[]    @db.Json
  nonce          String?
}

model Reward {
  id        BigInt @id @default(autoincrement())
  dispensed BigInt @default(0)
}

/// Model to store NFT collection data
model Collection {
  id BigInt @id @default(autoincrement())
  contract_address String @unique
  name String
  symbol String
  description String?
  website String?
  email String?
  twitter String?
  discord String?
  telegram String?
  github String?
  instagram String?
  medium String?
  logo_url String?
  banner_url String?
  featured_url String?
  large_image_url String?
  attributes Json?
  erc_type String
  token_type String
  deploy_block_number BigInt
  owner String
  contract_deployer String
  verified Boolean
  opensea_verified Boolean
  baddogs_verified Boolean
  rug_verified Boolean
  sus_verified Boolean
  royalty Float?
  items_total BigInt
  amounts_total BigInt
  owners_total Int
  opensea_floor_price Float
  floor_price Float
  collections_with_same_name Json?
  price_symbol String
  volume_total Float?
  sales_total Int?
  average_price Float?
  lowest_price_24h Float?
  average_price_24h Float?
  volume_24h Float?
  sales_24h Int?
  highest_price Float?
  volume_1d Float?
  volume_7d Float?
  volume_30d Float?
  volume_change_1d String?
  volume_change_7d String?
  volume_change_30d String?
  market_cap BigInt?
  average_price_change_1d String?
  average_price_change_7d String?
  average_price_change_30d String?
  last_ingested_at DateTime?
  last_updated_at DateTime?
  created_at DateTime?
}